################## SQLTrace.ps1 Configuration File ################
##
## Written by the Microsoft CSS SQL Server Network team
##
## https://github.com/microsoft/CSS_SQL_Networking_Tools/wiki
##
## Requires SQLTrace version 1.0.0150.0 or above or some options will be ignored
##


################## BID TRACE ################
##
## Only traces on Windows
## Does not trace JDBC Drivers
## Does not trace .NET Core Microsoft.Data.SqlClient
## For more information on BID Tracing, including Linux, see: https://github.com/microsoft/CSS_SQL_Networking_Tools/wiki/Collect-a-SQL-Driver-BID-Trace
##

BIDTrace          = Yes                                   # Controls the overall category of collection
BIDWOW            = Both                                  # No | Only | Both     (whether 32-bit apps are traced)
BIDProviderList   = System.Data System.Data.SNI

# BIDProviderList   = OLEDB SQLOLEDB DBNETLIB SQLNCLI11 MSOLEDBSQL MSOLEDBSQL19               # These are the currently supported OLE DB Providers
# BIDProviderList   = ODBC SQLSRV32 DBNETLIB MSODBCSQL11 MSODBCSQL13 MSODBCSQL17 MSODBCSQL18  # These are the currently supported ODBC Drivers


################## NETWORK TRACE ##########
##
## Only traces on Windows
## For more information on network tracing, see: https://github.com/microsoft/CSS_SQL_Networking_Tools/wiki/Collect-a-Network-Trace
##

NETTrace          = Yes      # Controls the overall category of collection
NETSH             = Yes      # Default for Windows; built-in                                                               Supports TruncatePackets, FilterString, TCPEvents
NETMON            = No       # Must be installed separately                                                                Supports TruncatePackets, FilterString
WIRESHARK         = No       # WireShark can see VPN traffic, must be installed separately                                 Supports TruncatePackets, FilterString
Pktmon            = No       # Windows 2019 and later, Windows 11 and later, Windows 10 builds equivalent to Windows 2019. Supports TruncatePackets, FilterString, TCPEvents
TruncatePackets   = No       # Whether to capture full packet payload or just the beginning portion
TCPEvents         = No       # For NETSH: collect TCPIP and Winsock AFD events

# FilterString      = IPv4.Address=10.10.10.10 Ethernet.Type=IPv4             # NETSH    filter string example; no port filtering; only a single = used in comparisons; For help: netsh trace show CaptureFilterHelp
# FilterString      = ipv4.address==10.10.10.10 and tcp.port==1433            # NETMON   filter string example; double == used in comparisons
# FilterString      = -f "host 10.10.10.10 and port 1433"                     # WIRSHARK filter string example; no = signs; for help run Wireshark | Capture | Capture Filters ... menu
# FilterString      = �t tcp �i 10.10.10.10 �p 1433                           # PKTMON   filter string example; not expression-based; spaces separate multiple values for IP addresses and ports


################## AUTH TRACE #############
##
## Equivalent to parts of the Directory Services Auth trace script, but more focused
##

AUTHTrace         = Yes      # Controls the overall category of collection
ssl               = Yes      # Certificate logs
credssp_ntlm      = Yes      # NTLM logs
KERBEROS          = Yes      # Kerberos logs
LSA               = Yes      # Local security authority logs


################## MISC #############
##
## Other Collection Settings
##

FlushTickets      = No       # Are we going to flush Kerberos tickets; not needed for pure network issues; may take a while
EventViewer       = Yes      # Application, System, and Security event logs
SQLErrorLog       = Yes      # Line up SQL errors with other traces
SQLXEventLog      = No       # These are large; do not collect unless you suspect a SQL Health issue
DeleteOldFiles    = No       # This triggers the switch to delete old files depending on configuration of MinFiles and MinMinutes
MinFiles          = 20       # Only delete files beyond this limit that ar more than MinMinutes old
MinMinutes        = 60       # Only delete files older than this number of minutes (LastWriteTime) has elapsed